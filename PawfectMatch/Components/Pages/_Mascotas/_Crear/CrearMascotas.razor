@page "/mascotas/crear"
@using Blazored.Toast.Services

@inject MascotasService mascotasService
@inject RazasService razasService
@inject SexosService sexosService
@inject CategoriasServices categoriasServices
@inject RelacionSizesService relacionSizesService
@inject EstadosService estadosService
@inject NavigationManager NavigationManager
@inject IToastService ToastService

@attribute [Authorize(Roles = "Admin")]
@rendermode InteractiveServer

<div class="mascota-container">
    <div class="mascota-header">
        <h1 class="mascota-title">Crear Nueva Mascota</h1>
        <div class="mascota-actions">
            <button class="btn-action" @onclick="ShowCrearCategorias">
                <i class="fas fa-plus-circle"></i> Crear Categoría
            </button>
            <button class="btn-action" @onclick="ShowCreaRazas">
                <i class="fas fa-plus-circle"></i> Crear Raza
            </button>
        </div>
    </div>

    <div class="mascota-form-container">
        <EditForm Model="@mascota" OnValidSubmit="GuardarMascota" class="mascota-form">
            <DataAnnotationsValidator />

            <div class="validation-summary">
                <ValidationSummary />
            </div>

            <div class="form-grid">
                <!-- Información básica -->
                <div class="form-section">
                    <h2 class="section-title">Información Básica</h2>

                    <div class="form-group">
                        <label for="nombre">Nombre:</label>
                        <InputText id="nombre" @bind-Value="mascota.Nombre" class="form-control" placeholder="Nombre de la mascota" />
                        <ValidationMessage For="@(() => mascota.Nombre)" />
                    </div>

                    <div class="form-group">
                        <label for="categoria">Categoría:</label>
                        <InputSelect id="categoria" @bind-Value="mascota.CategoriaId" class="form-control">
                            <option value="">Seleccione una categoría</option>
                            @foreach (var cat in categorias)
                            {
                                <option value="@cat.CategoriaId">@cat.Nombre</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => mascota.CategoriaId)" />
                    </div>

                    <div class="form-group">
                        <label for="raza">Raza:</label>
                        <InputSelect id="raza" @bind-Value="mascota.RazaId" class="form-control">
                            <option value="">Seleccione una raza</option>
                            @foreach (var raza in razas)
                            {
                                <option value="@raza.RazaId">@raza.Nombre</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => mascota.RazaId)" />
                    </div>

                    <div class="form-group">
                        <label for="sexo">Sexo:</label>
                        <InputSelect id="sexo" @bind-Value="mascota.SexoId" class="form-control">
                            <option value="">Seleccione un sexo</option>
                            @foreach (var sexo in Sexos)
                            {
                                <option value="@sexo.SexoId">@sexo.Nombre</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => mascota.SexoId)" />
                    </div>
                </div>

                <!-- Características físicas -->
                <div class="form-section">
                    <h2 class="section-title">Características Físicas</h2>

                    <div class="form-group">
                        <label for="relacion-size">Relación de Tamaño:</label>
                        <InputSelect id="relacion-size" @bind-Value="mascota.RelacionSizeId" class="form-control">
                            <option value="">Seleccione una opción</option>
                            @foreach (var size in relacionSizes)
                            {
                                <option value="@size.RelacionSizeId">@size.Size</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => mascota.RelacionSizeId)" />
                    </div>

                    <div class="form-group">
                        <label for="tamano">Tamaño (pulgadas):</label>
                        <InputNumber id="tamano" @bind-Value="mascota.Tamano" class="form-control" />
                        <ValidationMessage For="@(() => mascota.Tamano)" />
                    </div>

                    <div class="form-group">
                        <label for="fecha-nacimiento">Fecha de nacimiento:</label>
                        <InputDate id="fecha-nacimiento" @bind-Value="mascota.FechaNacimiento" class="form-control" />
                        <ValidationMessage For="@(() => mascota.FechaNacimiento)" />
                    </div>

                    <div class="form-group">
                        <label for="estado">Estado:</label>
                        <InputSelect id="estado" @bind-Value="mascota.EstadoId" class="form-control">
                            <option value="">Seleccione un estado</option>
                            @foreach (var estado in estados)
                            {
                                <option value="@estado.EstadoId">@estado.Nombre</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => mascota.EstadoId)" />
                    </div>
                </div>
            </div>

            <!-- Descripción y foto -->
            <div class="form-section full-width">
                <h2 class="section-title">Descripción y Foto</h2>

                <div class="form-group">
                    <label for="descripcion">Descripción:</label>
                    <InputTextArea id="descripcion" @bind-Value="mascota.Descripcion" class="form-control" rows="4" placeholder="Describe la personalidad y características de la mascota" />
                    <ValidationMessage For="@(() => mascota.Descripcion)" />
                </div>

                <div class="form-group">
                    <label for="foto-url">Foto (URL):</label>
                    <InputText id="foto-url" @bind-Value="mascota.FotoUrl" class="form-control" placeholder="URL de la imagen" />
                    <ValidationMessage For="@(() => mascota.FotoUrl)" />

                    @if (!string.IsNullOrEmpty(mascota.FotoUrl))
                    {
                        <div class="image-preview">
                            <img src="@mascota.FotoUrl" alt="Vista previa" />
                        </div>
                    }
                </div>
            </div>

            <div class="form-actions">
                <button type="button" class="btn-secondary" @onclick="Cancelar">Cancelar</button>
                <button type="submit" class="btn-primary">Guardar Mascota</button>
            </div>
        </EditForm>
    </div>
</div>

<!-- Modal para Crear Categorías -->
@if (isCrearCategoriasVisible)
{
    <div class="modal-overlay">
        <div class="modal-container">
            <div class="modal-header">
                <h2 class="modal-title">Crear Nueva Categoría</h2>
                <button type="button" class="modal-close" @onclick="HideCrearCategorias">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="modal-body">
                <CrearCategorias OnCategoriaCreated="OnCategoriaCreated" />
            </div>
        </div>
    </div>
}

<!-- Modal para Crear Razas -->
@if (isCrearRazasVisible)
{
    <div class="modal-overlay">
        <div class="modal-container">
            <div class="modal-header">
                <h2 class="modal-title">Crear Nueva Raza</h2>
                <button type="button" class="modal-close" @onclick="HideCreaRazas">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="modal-body">
                <CrearRazas OnRazaCreated="OnRazaCreated" />
            </div>
        </div>
    </div>
}

@code {
    private Mascotas mascota = new();
    private List<Razas> razas = new();
    private List<Sexos> Sexos = new();
    private List<Categorias> categorias = new();
    private List<RelacionSizes> relacionSizes = new();
    private List<Estados> estados = new();
    private bool isCrearCategoriasVisible = false;
    private bool isCrearRazasVisible = false;

    protected override async Task OnInitializedAsync()
    {
        await Refresh();
    }

    private async Task Refresh()
    {
        categorias = await categoriasServices.ListAsync(x => true);
        razas = await razasService.ListAsync(x => true);
        relacionSizes = await relacionSizesService.ListAsync(x => true);
        estados = await estadosService.ListAsync(x => true);
        Sexos = await sexosService.ListAsync(x => true);
    }

    private async Task GuardarMascota()
    {
        try
        {
            bool guardado = await mascotasService.InsertAsync(mascota);
            if (guardado)
            {
                ToastService.ShowSuccess("Mascota guardada exitosamente");
                NavigationManager.NavigateTo("/mascotas");
            }
            else
            {
                ToastService.ShowError("No se pudo guardar la mascota");
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowError($"Error: {ex.Message}");
        }
    }

    private void Cancelar()
    {
        NavigationManager.NavigateTo("/mascotas");
    }

    private void ShowCrearCategorias() => isCrearCategoriasVisible = true;
    private void HideCrearCategorias() => isCrearCategoriasVisible = false;
    private void ShowCreaRazas() => isCrearRazasVisible = true;
    private void HideCreaRazas() => isCrearRazasVisible = false;

    private async Task OnCategoriaCreated()
    {
        await Refresh();
        HideCrearCategorias();
        ToastService.ShowSuccess("Categoría creada exitosamente");
    }

    private async Task OnRazaCreated()
    {
        await Refresh();
        HideCreaRazas();
        ToastService.ShowSuccess("Raza creada exitosamente");
    }
}