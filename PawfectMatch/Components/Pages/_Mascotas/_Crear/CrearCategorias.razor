@inject CategoriasServices categoriasService

<EditForm Model="@categoria" OnValidSubmit="CrearCategoria">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Nombre de la categoría:</label>
        <InputText @bind-Value="categoria.Nombre" class="form-control" />
        <ValidationMessage For="@(() => categoria.Nombre)" />
    </div>

    <div class="d-flex gap-2">
        <button type="submit" class="btn btn-primary">Crear</button>
        <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
    </div>

    @if (!string.IsNullOrEmpty(mensajeExito))
    {
        <div class="alert alert-success mt-3">@mensajeExito</div>
    }

    @if (!string.IsNullOrEmpty(error))
    {
        <div class="alert alert-danger mt-3">@error</div>
    }
</EditForm>

@code {
    private Categorias categoria = new();
    private string? mensajeExito;
    private string? error;
    [Parameter]
    public EventCallback OnCreated { get; set; }
    private async Task CrearCategoria()
    {
        mensajeExito = error = null;

        if (string.IsNullOrWhiteSpace(categoria.Nombre))
        {
            error = "Debe ingresar un nombre.";
            return;
        }

        var guardado = await categoriasService.InsertAsync(categoria);
        if (guardado)
        {
            mensajeExito = "¡Categoría creada con éxito!";
            categoria = new();
            await OnCreated.InvokeAsync();
        }
        else
        {
            error = "No se pudo crear la categoría.";
        }
    }

    private void Cancelar()
    {
        categoria = new();
        mensajeExito = error = null;
    }
}
