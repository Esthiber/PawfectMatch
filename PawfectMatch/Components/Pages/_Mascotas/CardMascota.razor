@using PawfectMatch.Models._Mascotas
@inject NavigationManager navigationManager

<div class="card mascota-card">
    <div class="card-img-container">
        <img src="@Mascota.FotoUrl" class="card-img-top" alt="@Mascota.Nombre">
        <span class="badge @GetEstadoBadgeClass()">@Mascota.Estado.Nombre</span>
        <AuthorizeView Roles="Admin">
            <span class="edit-btn btn btn-primary" @onclick="GoToEdit"><i class="bi bi-pencil-square"></i></span>
        </AuthorizeView>
    </div>
    <div class="card-body">
        <h5 class="card-title">@Mascota.Nombre</h5>
        <div class="mascota-info">
            <div class="info-item">
                <i class="bi bi-calendar"></i>
                <span>@CalcularEdad() años</span>
            </div>
            <div class="info-item">
                <i class="bi bi-gender-@(Mascota.Sexo.Nombre.ToLower() == "macho" ? "male" : "female")"></i>
                <span>@Mascota.Sexo.Nombre</span>
            </div>
            <div class="info-item">
                <i class="bi bi-rulers"></i>
                <span>@Mascota.Tamano" (@Mascota.RelacionSize.Size)</span>
            </div>
        </div>
        <p class="card-text text-truncate">@Mascota.Descripcion</p>
        <div class="d-flex justify-content-between align-items-center">
            <span class="categoria-badge">@Mascota.Categoria.Nombre</span>
            <button class="btn btn-primary" @onclick="VerDetalles">Ver más</button>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Mascotas Mascota { get; set; } = null!;

    [Parameter]
    public EventCallback<int> OnVerDetalles { get; set; }

    private string GetEstadoBadgeClass()
    {
        return Mascota.Estado.Nombre.ToLower() switch
        {
            "disponible" => "bg-success",
            "adoptado" => "bg-info",
            "en proceso" => "bg-warning",
            _ => "bg-secondary"
        };
    }

    private int CalcularEdad()
    {
        var hoy = DateOnly.FromDateTime(DateTime.Today);
        int edad = hoy.Year - Mascota.FechaNacimiento.Year;

        if (Mascota.FechaNacimiento.AddYears(edad) > hoy)
        {
            edad--;
        }

        return edad;
    }

    private async Task VerDetalles()
    {
        await OnVerDetalles.InvokeAsync(Mascota.MascotaId);
    }

    private void GoToEdit()
    {
        navigationManager.NavigateTo($"{Urls.Mascotas.Editar}{Mascota.MascotaId}");
    }
}