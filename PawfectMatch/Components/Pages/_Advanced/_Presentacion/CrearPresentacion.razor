@page "/Advanced/Presentaciones/Crear"

@inject NavigationManager Nav
@using PawfectMatch.Models._Presentacion
@using PawfectMatch.Services._Presentacion
@inject PresentacionesService presentacionesService

@rendermode InteractiveServer

<h3>Crear Presentación</h3>

<EditForm Model="@presentacion" OnValidSubmit="@GuardarPresentacion">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Título:</label>
        <InputText class="form-control" @bind-Value="presentacion.Titulo" />
        <ValidationMessage For="()=> presentacion.Titulo"></ValidationMessage>
    </div>

    <h4>Diapositivas</h4>

    @foreach (var d in diapositivas)
    {
        <ShowDiapositiva diapositiva="d"></ShowDiapositiva>
        <button class="btn btn-danger mt-2" type="button" @onclick="@(() => EliminarDiapositiva(d))">Eliminar</button>

    }

    <button class="btn btn-secondary" type="button" @onclick="AgregarDiapositiva">Agregar Diapositiva</button>
    <br /><br />
    <button class="btn btn-primary" type="submit">Guardar Presentación</button>
</EditForm>

@if (mostrarModal)
{
    <AddDiapositiva OnConfirmar="AgregarDesdeModal"
                    OnCancelar="HideAddDiapositiva" />
    <p> Mostrando modal</p>
}
else
{
    <p>None</p>
}



@code {
    Presentaciones presentacion = new();
    List<Diapositivas> diapositivas = new();

    bool mostrarModal = false;

    private void AgregarDiapositiva()
    {
        mostrarModal = true;
    }
    private void HideAddDiapositiva() => mostrarModal = false;

    private void AgregarDesdeModal(Diapositivas nueva)
    {
        nueva.Orden = diapositivas.Count + 1;
        diapositivas.Add(nueva);
        mostrarModal = false;
    }



    private async Task GuardarPresentacion()
    {
        bool result = await presentacionesService.InsertAsync(presentacion, diapositivas);

        if (result)
        {
            Nav.NavigateTo(Urls.Advanced.Presentacion);
        }
        else
        {
            // podrías mostrar una alerta o mensaje
            Console.WriteLine("Error al guardar la presentación.");
        }
    }

    // private void AgregarDiapositiva()
    // {
    //     diapositivas.Add(new Diapositivas
    //         {
    //             Orden = diapositivas.Count + 1,
    //             ImageUrl = "https:placehold.co/600x300" // Imagen por defecto
    //         });
    // }

    private void EliminarDiapositiva(Diapositivas d)
    {
        diapositivas.Remove(d);
    }
}
