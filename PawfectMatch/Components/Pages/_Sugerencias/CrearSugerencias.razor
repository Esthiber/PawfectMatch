@page "/Sugerencias"

@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@using PawfectMatch.Models
@inject SugerenciasService sugerenciasService
@inject AuthenticationStateProvider authProvider

<h3 class="text-lg font-semibold mb-3">Déjanos tu sugerencia</h3>

@if (guardado)
{
    <div class="alert alert-success">
        ¡Gracias por tu sugerencia!
    </div>
}

<EditForm Model="@sugerencia" OnValidSubmit="GuardarSugerencia">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <AuthorizeView Context="other_name">
        <Authorized>
            <div class="mb-3">
                <label>Correo electrónico:</label>
                <InputText @bind-Value="sugerencia.UserMail" class="form-control" readonly />
            </div>

        </Authorized>
        <NotAuthorized>
            <a class="btn btn-primary" href="@Urls.Account.Login"> Iniciar Session</a>
        </NotAuthorized>
    </AuthorizeView>
    <div class="mb-3">
        <label for="desc">Descripción:</label>
        <InputTextArea @bind-Value="sugerencia.Descripcion" class="form-control" id="desc" />
        <ValidationMessage For="@(() => sugerencia.Descripcion)" />
    </div>

    <button type="submit" class="btn btn-primary">Enviar</button>
</EditForm>

@code {
    private Sugerencias sugerencia = new();
    private bool guardado = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await authProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            sugerencia.UserMail = user.FindFirst(ClaimTypes.Email)?.Value ?? string.Empty;
        }
    }

    private async Task GuardarSugerencia()
    {
        guardado = await sugerenciasService.InsertAsync(sugerencia);
        if (guardado)
        {
            sugerencia.Descripcion = string.Empty; // solo limpiamos la descripción
        }
    }
}

