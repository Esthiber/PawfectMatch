@using PawfectMatch.Models._Servicios

<div class="modal fade show d-block" tabindex="-1" role="dialog" style="background-color: rgba(0,0,0,0.5);" @onclick="CerrarModal">
    <div class="modal-dialog" role="document" @onclick:stopPropagation="true">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Seleccionar Servicios</h5>
                <button type="button" class="btn-close" @onclick="CerrarModal"></button>
            </div>
            <div class="modal-body">
                <ul class="list-group">
                    @foreach (var servicio in Servicios)
                    {
                        <li class="list-group-item">
                            <input type="checkbox" class="form-check-input me-2"
                                   checked="@ServiciosSeleccionados.Contains(servicio)"
                                   @onchange="() => ToggleServicio(servicio)" />
                            <label>@servicio.Nombre - @servicio.Costo:C2</label>
                        </li>
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" @onclick="CerrarModal">Cancelar</button>
                <button class="btn btn-primary" @onclick="Confirmar">Confirmar</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public List<Servicios> Servicios { get; set; } = new();

    public List<Servicios> listaServicios { get; set; } = new();

    [Parameter]
    public EventCallback<List<Servicios>> OnServiciosSeleccionados { get; set; }

    [Parameter]
    public EventCallback OnCancelar { get; set; }

    private List<Servicios> ServiciosSeleccionados { get; set; } = new();

    private void ToggleServicio(Servicios servicio)
    {
        if (ServiciosSeleccionados.Contains(servicio))
            ServiciosSeleccionados.Remove(servicio);
        else
            ServiciosSeleccionados.Add(servicio);
    }

    private async Task Confirmar()
    {
        await OnServiciosSeleccionados.InvokeAsync(ServiciosSeleccionados);
        await CerrarModal();
    }

    private async Task CerrarModal()
    {
        await OnCancelar.InvokeAsync();
    }
}
