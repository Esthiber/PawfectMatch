@using PawfectMatch.Models
@using Microsoft.AspNetCore.Components.Forms
@inject CitasService citasService

<EditForm Model="@cita" OnValidSubmit="GuardarCita">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Fecha y hora:</label>
        <InputDate @bind-Value="cita.FechaHora" class="form-control" />
        <ValidationMessage For="@(() => cita.FechaHora)" />
    </div>

    <button type="submit" class="btn btn-success">Guardar Cita</button>

    @if (!string.IsNullOrWhiteSpace(mensaje))
    {
        <div class="alert alert-info mt-3">@mensaje</div>
    }
</EditForm>

@code {
    [Parameter]
    public Mascotas Mascota { get; set; } = null!;

    [Parameter]
    public Adoptantes Adoptante { get; set; } = null!;

    private Citas cita { get; set; } = new();
    private string mensaje { get; set; } = string.Empty;

    protected override void OnInitialized()
    {
        if (Mascota is null)
        {
            mensaje = "Error al encontrar la mascota";
            if (Adoptante is null) mensaje += "\nError al encontrar al adoptante";
        }
        else
        {
            cita.MascotaId = Mascota.MascotaId;
            cita.AdoptanteId = Adoptante.AdoptanteId;
            cita.FechaHora = DateTime.Now.AddDays(1);
        }
    }

    private async Task GuardarCita()
    {
        var exito = await citasService.InsertAsync(cita);

        mensaje = exito ? "Cita guardada correctamente." : "Error al guardar la cita.";

        if (exito)
        {
            cita = new Citas
                {
                    MascotaId = Mascota.MascotaId,
                    AdoptanteId = Adoptante.AdoptanteId,
                    FechaHora = DateTime.Now.AddDays(1)
                };
        }
    }
}
